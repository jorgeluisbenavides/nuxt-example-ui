/*!
 * devextreme-vue
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

interface IExtension {
    $_isExtension: boolean;
    $_attachTo: (element: any) => any;
}
interface IExtensionComponentNode {
    $_hasOwner: boolean;
}
declare function initDxExtensionComponent(): import("@vue/runtime-core").DefineComponent<{}, {}, {}, {}, {
    attachTo(element: any): void;
}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").DefineComponent<{}, {}, {
    eventBus: import("devextreme/artifacts/npm/devextreme/core/utils/callbacks").Callback<any[], any>;
    prevClassAttr: string;
}, {}, {
    $_syncElementClassesWithClassAttr(): void;
    $_applyConfigurationChanges(): void;
    $_createWidget(element: any): void;
    $_getIntegrationOptions(): object;
    $_getWatchMethod(): (valueGetter: () => any, valueChangeCallback: (value: any) => void, options: {
        deep: boolean;
        skipImmediate: boolean;
    }) => any;
    $_getExtraIntegrationOptions(): object;
    $_processChildren(_children: import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
        [key: string]: any;
    }>[]): void;
    $_createEmitters(instance: any): void;
}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{}>>, {}>, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{}>>, {}>;
export { initDxExtensionComponent, IExtension, IExtensionComponentNode, };
